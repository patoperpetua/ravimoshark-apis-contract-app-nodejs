openapi: 3.0.0
info:
  version: 1.0.0
  title: Ravimoshark Contract API
  termsOfService: 'https://ravimoshark.com/terms/'
  contact:
    email: dev@ravimoshark.com
    url: 'http://ravimoshark.com/contact'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  description: |
    This is an API to interact with Ravimoshark contracts database.
    # Introduction
    This API allow to create, modify and delete contracts and machines. It also interacts with machines imported from SAGE database.
    # User Authentication
    This API does not contain any kind of user validation but It request to have a valid authentication user to interact with it. For more information about user Authentication, please refer to [Ravimoshark User Authentication](https://ravimoshark.com/back/apis/auth/latest).
externalDocs:
  description: Find out how to interact with Ravimoshark's APIs.
  url: 'https://ravimoshark.com/back/apis/auth/latest'
tags:
  - name: Contracts
    description: Operations about contracts.
  - name: Machines
    description: Operations about machines.
  - name: ImportedMachines
    description: Operations about imported machines.
servers:
  - url: 'http://localhost:8000'
  - url: 'https://ravimoshark.com/back/apis/contract/v1'
  - url: 'https://ravimoshark.com/back/apis/contract/latest'
paths:
  /clients:
    get:
      tags:
        - Clients
      summary: Get all clients.
      description: Get all clients.
      operationId: getClients
      parameters:
        - $ref: '#/components/parameters/Skip'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/OrderBy'
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Deleted'
        - $ref: '#/components/parameters/Metadata'
      responses:
        '200':
          description: Request OK.
          headers:
            - $ref: '#/components/headers/Limit'
            - $ref: '#/components/headers/Remaining'
            - $ref: '#/components/headers/Reset'
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/Metadata'
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Clients'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: Clients
  /contracts:
    get:
      tags:
        - Contracts
      summary: Get all contracts.
      description: Get all contracts.
      operationId: getContracts
      parameters:
        - $ref: '#/components/parameters/Skip'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/OrderBy'
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Deleted'
        - $ref: '#/components/parameters/Metadata'
        - $ref: '#/components/parameters/Valid'
        - $ref: '#/components/parameters/Reviewed'
      responses:
        '200':
          description: Request OK.
          headers:
            - $ref: '#/components/headers/Limit'
            - $ref: '#/components/headers/Remaining'
            - $ref: '#/components/headers/Reset'
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/Metadata'
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Contracts'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: Contracts
    post:
      tags:
        - Contracts
      summary: Add one contract.
      description: Add one contract.
      operationId: addContract
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contracts'
      responses:
        '200':
          description: Request OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contracts'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: Contracts
    put:
      tags:
        - Contracts
      summary: Edit one contract.
      description: Edit one contract.
      operationId: editContract
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contracts'
      responses:
        '200':
          description: Request OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contracts'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: Contracts
  '/contracts/{refContract}':
    get:
      tags:
        - Contracts
      summary: Get one contract.
      description: Get one contract.
      operationId: getContractById
      parameters:
        - $ref: '#/components/parameters/RefContract'
        - $ref: '#/components/parameters/Deleted'
      responses:
        '200':
          description: Request OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contracts'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: Contracts
    delete:
      tags:
        - Contracts
      summary: Delete one contract.
      description: Delete one contract.
      operationId: deleteContract
      parameters:
        - $ref: '#/components/parameters/RefContract'
      responses:
        '200':
          description: Request OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefContract'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: Contracts
  /importedMachines:
    get:
      tags:
        - ImportedMachines
      summary: Get all imported Machines.
      description: Get all imported Machines.
      operationId: getImportedMachines
      parameters:
        - $ref: '#/components/parameters/Skip'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/OrderBy'
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Deleted'
        - $ref: '#/components/parameters/Metadata'
        - $ref: '#/components/parameters/Reviewed'
      responses:
        '200':
          description: Request OK.
          headers:
            - $ref: '#/components/headers/Limit'
            - $ref: '#/components/headers/Remaining'
            - $ref: '#/components/headers/Reset'
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/Metadata'
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ImportedMachines'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: ImportedMachines
    post:
      tags:
        - ImportedMachines
      summary: Add one imported Machine.
      description: Add one imported Machine.
      operationId: addImportedMachine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportedMachines'
      responses:
        '200':
          description: Request OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportedMachines'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: ImportedMachines
    put:
      tags:
        - ImportedMachines
      summary: Edit one imported Machine.
      description: Edit one imported Machine.
      operationId: editImportedMachine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportedMachines'
      responses:
        '200':
          description: Request OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportedMachines'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: ImportedMachines
  '/importedMachines/{id}':
    get:
      tags:
        - ImportedMachines
      summary: Get one imported Machine.
      description: Get one imported Machine.
      operationId: getImportedMachineById
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Deleted'
      responses:
        '200':
          description: Request OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machines'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: ImportedMachines
    delete:
      tags:
        - ImportedMachines
      summary: Delete one imported Machine.
      description: Delete one imported Machine.
      operationId: deleteImportedMachine
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: Request OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdInteger'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: ImportedMachines
  /machines:
    get:
      tags:
        - Machines
      summary: Get all machines.
      description: Get all machines.
      operationId: getMachines
      parameters:
        - $ref: '#/components/parameters/Skip'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/OrderBy'
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Deleted'
        - $ref: '#/components/parameters/Metadata'
      responses:
        '200':
          description: Request OK.
          headers:
            - $ref: '#/components/headers/Limit'
            - $ref: '#/components/headers/Remaining'
            - $ref: '#/components/headers/Reset'
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/Metadata'
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Machines'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: Machines
    post:
      tags:
        - Machines
      summary: Add one machine.
      description: Add one machine.
      operationId: addMachine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Machines'
      responses:
        '200':
          description: Request OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machines'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: Machines
    put:
      tags:
        - Machines
      summary: Edit one machine.
      description: Edit one machine.
      operationId: editMachine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Machines'
      responses:
        '200':
          description: Request OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machines'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: Machines
  '/machines/{id}':
    get:
      tags:
        - Machines
      summary: Get one Machine.
      description: Get one machine.
      operationId: getMachineById
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Deleted'
      responses:
        '200':
          description: Request OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machines'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: Machines
    delete:
      tags:
        - Machines
      summary: Delete one machine.
      description: Delete one machine.
      operationId: deleteMachine
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: Request OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdInteger'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: Machines
  /pieces:
    get:
      tags:
        - Pieces
      summary: Get all pieces.
      description: Get all pieces.
      operationId: getPieces
      parameters:
        - $ref: '#/components/parameters/Skip'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/OrderBy'
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Deleted'
        - $ref: '#/components/parameters/Metadata'
      responses:
        '200':
          description: Request OK.
          headers:
            - $ref: '#/components/headers/Limit'
            - $ref: '#/components/headers/Remaining'
            - $ref: '#/components/headers/Reset'
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/Metadata'
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pieces'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
      x-swagger-router-controller: Pieces
components:
  schemas:
    Clients:
      description: Client minimum information.
      type: object
      properties:
        refClient:
          type: string
        name:
          type: string
        nickname:
          type: string
    Contracts:
      description: Client's contract.
      type: object
      properties:
        refContract:
          type: integer
          format: int64
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Locations'
        idLocations:
          type: array
          items:
            type: integer
            format: int64
        refClient:
          type: string
        client:
          $ref: '#/components/schemas/Clients'
        identification:
          type: string
        dateDebut:
          type: string
          format: date
        dateFin:
          type: string
          format: date
        reconduction:
          type: string
          format: ''
        loyer:
          type: number
          format: float
        miniconso:
          type: number
          format: float
        reviewed:
          type: boolean
        valid:
          type: boolean
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        deleted:
          type: boolean
    CustomError:
      type: object
      required:
        - message
      properties:
        code:
          type: string
        message:
          type: string
        data:
          type: string
    Deleted:
      type: string
      default: ACTIVE
      enum:
        - ACTIVE
        - DELETED
        - ALL
    IdInteger:
      description: Object's Id.
      type: object
      properties:
        id:
          type: integer
          format: int64
    ImportedMachines:
      description: Machine imported from SAGE.
      type: object
      properties:
        id:
          type: integer
          format: int64
        identification:
          type: string
        machine:
          $ref: '#/components/schemas/Machines'
        machineId:
          type: integer
          format: int64
        reviewed:
          type: boolean
        contract:
          $ref: '#/components/schemas/Contracts'
        refContract:
          type: string
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        deleted:
          type: boolean
    Locations:
      description: Client's contract.
      type: object
      properties:
        id:
          type: integer
          format: int64
        machine:
          $ref: '#/components/schemas/Machines'
        machineId:
          type: integer
          format: int64
        refContract:
          type: integer
          format: int64
    Machines:
      description: Client's machines associated with a contract.
      type: object
      properties:
        id:
          type: integer
          format: int64
        refArticle:
          type: string
        piece:
          $ref: '#/components/schemas/Pieces'
        numSerie:
          type: string
        refContract:
          type: string
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        deleted:
          type: boolean
    Metadata:
      type: object
      properties:
        first:
          type: integer
          format: int64
        prev:
          type: integer
          format: int64
        self:
          type: integer
          format: int64
        next:
          type: integer
          format: int64
        last:
          type: integer
          format: int64
    Pieces:
      description: Pieces minimum information.
      type: object
      properties:
        refArticle:
          type: string
        name:
          type: string
    RefContract:
      description: Contract's reference.
      type: object
      properties:
        refContract:
          type: integer
          format: int64
    Reviewed:
      type: string
      default: REVIEWED
      enum:
        - REVIEWED
        - NOT_REVIEWED
        - ALL
    Valid:
      type: string
      default: VALID
      enum:
        - VALID
        - INVALID
        - ALL
  responses:
    '204':
      description: Response is empty.
      headers:
        - $ref: '#/components/headers/Limit'
        - $ref: '#/components/headers/Remaining'
        - $ref: '#/components/headers/Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomError'
    '400':
      description: Some parameters are missing or badly entered.
      headers:
        - $ref: '#/components/headers/Limit'
        - $ref: '#/components/headers/Remaining'
        - $ref: '#/components/headers/Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomError'
    '401':
      description: Unauthorized
      headers:
        - $ref: '#/components/headers/Limit'
        - $ref: '#/components/headers/Remaining'
        - $ref: '#/components/headers/Reset'
      content:
        application/json:
          schema:
            type: string
    '404':
      description: Entity not found.
      headers:
        - $ref: '#/components/headers/Limit'
        - $ref: '#/components/headers/Remaining'
        - $ref: '#/components/headers/Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomError'
    '405':
      description: Illegal input for operation.
      headers:
        - $ref: '#/components/headers/Limit'
        - $ref: '#/components/headers/Remaining'
        - $ref: '#/components/headers/Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomError'
  parameters:
    Deleted:
      name: deleted
      in: query
      description: 'Get all, deleted, not deleted data. Default not deleted.'
      required: false
      schema:
        $ref: '#/components/schemas/Deleted'
        default: ACTIVE
    Filter:
      name: filterBy
      description: filter data.
      in: query
      required: false
      schema:
        type: string
    Id:
      name: id
      description: id to delete or search
      in: path
      required: true
      schema:
        type: integer
        format: int64
    Limit:
      name: limit
      description: max records to return
      in: query
      required: true
      schema:
        type: integer
        format: int32
        default: 10
    Metadata:
      name: metadata
      description: If metadata is needed (for pagination controls)
      in: query
      required: false
      schema:
        type: boolean
        default: false
    OrderBy:
      name: orderBy
      description: order by property.
      in: query
      required: false
      schema:
        type: string
    RefContract:
      name: refContract
      description: id to delete or search
      in: path
      required: true
      schema:
        type: integer
        format: int64
    Reviewed:
      name: reviewed
      description: only reviewed data.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/Reviewed'
    Skip:
      name: skip
      description: number of item to skip
      in: query
      required: true
      schema:
        type: integer
        format: int32
        default: 0
    Valid:
      name: valid
      description: Only valid data.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/Valid'
  headers:
    Limit:
      description: The number of allowed requests in the current period
      schema:
        type: integer
        format: int64
    Remaining:
      description: The number of remaining requests in the current period
      schema:
        type: integer
        format: int64
    Reset:
      description: The number of seconds left in the current period
      schema:
        type: integer
        format: int64
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://example.com/api/oauth/dialog'
          scopes:
            'read:users': read users info
            'write:users': modify or remove users
